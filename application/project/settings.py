"""
Django settings for pornator project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-pu*q^ub8s5d=m+k%6m-7#lbm3!3ckvco7kq&%2v4$8sx$%^o*j"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get("DEBUG", "True") == "True"

ALLOWED_HOSTS = os.environ.get("ALLOWED_HOSTS", "").split(",")
CSRF_TRUSTED_ORIGINS = [
    f"https://{host}" for host in os.environ.get("ALLOWED_HOSTS", "").split(",")
]

# Application definition

INSTALLED_APPS = [
    "modeltranslation",
    "daphne",
    "health_check",
    "health_check.db",
    "health_check.contrib.migrations",
    "health_check.storage",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sitemaps",
    "django_recaptcha",
    "apps.migration",
    "apps.websites",
    "apps.ai_pictures",
    "apps.videos",
    "apps.porn_models",
    "apps.blog",
    "apps.glossary",
    "apps.surveys",
    "apps.scripts",
    "apps.stories",
    "apps.trends",
    "apps.ads",
    "apps.contact",
    "libs.i18n",
    "libs.ld_json",
    "libs.format",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.locale.LocaleMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "project.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "libs.context_processors.canonical",
                "libs.context_processors.alternates",
                "libs.context_processors.disclaimer_cookie_context",
                "libs.context_processors.nav_bar_context",
                "apps.ads.context_processors.top_link",
            ],
        },
    },
]

ASGI_APPLICATION = "project.asgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": os.environ.get("APP_DATABASE_NAME"),
        "USER": os.environ.get("APP_DATABASE_USER"),
        "PASSWORD": os.environ.get("APP_DATABASE_PASSWORD"),
        "HOST": os.environ.get("APP_DATABASE_HOST"),
        "PORT": os.environ.get("APP_DATABASE_PORT"),
    },
    "mysql": {
        "ENGINE": "django.db.backends.mysql",
        "HOST": "mysqldb",
        "NAME": "michaeljizmaxime",
        "USER": "root",
        "PASSWORD": "",
    },
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en"
LANGUAGES = (
    ("en", "English"),
    ("fr", "Français"),
)
LOCALE_PATHS = (os.path.join(BASE_DIR, "locale"),)

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = os.environ.get("STATIC_URL")
# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

MEDIA_URL = os.environ.get("MEDIA_URL")

STORAGES = {
    "default": {
        "BACKEND": "storages.backends.s3.S3Storage",
        "OPTIONS": {
            "endpoint_url": os.environ.get("MINIO_ENDPOINT_URL"),
            "bucket_name": os.environ.get("MINIO_BUCKET_NAME"),
            "access_key": os.environ.get("MINIO_ACCESS_KEY"),
            "secret_key": os.environ.get("MINIO_SECRET_KEY"),
            "use_ssl": os.environ.get("MINIO_USE_SSL") == "True",
            "custom_domain": ALLOWED_HOSTS[0] + "/" + (MEDIA_URL or "").strip("/"),
        },
    },
    "staticfiles": {
        "BACKEND": "libs.storage.CustomStaticFilesStorage",
        "OPTIONS": {
            "manifest_url": "https://www.pornator.localhost/statics/manifest.json"
        },
    },
}

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "django.server": {
            "()": "django.utils.log.ServerFormatter",
            "format": "[{server_time}] {message}",
            "style": "{",
        }
    },
    "handlers": {
        "django.server": {
            "level": "INFO",
            "class": "logging.StreamHandler",
            "formatter": "django.server",
        },
    },
    "loggers": {
        "django.request": {
            "handlers": ["django.server"],
            "level": "DEBUG",
            "propagate": True,
        },
    },
}

VIDEOS_WEBCAM_URL = "https://pt.cdwmtt.com/api/video-promotion/v1/list?psid=thepornator&pstool=421_1&accessKey=335d14527f9a29381e1c0405caca83d4&ms_notrack=1&program=vpapi&campaign_id=&type=&site=jasmin&sexualOrientation=straight&forcedPerformers=&limit=40&primaryColor=%238AC437&labelColor=%23212121"

VIDEO_WEBCAM_DETAIL = "https://wmcdpt.com/api/video-promotion/v1/details/{video_id}/?psid=thepornator&pstool=421_2&accessKey=335d14527f9a29381e1c0405caca83d4&ms_notrack=1&campaign_id=&site=jsm&clientIp={client_ip}&primaryColor=8AC437&labelColor=212121&psprogram=VPAPI"
SURVEY_TIME_THRESHOLD_SECONDS = 15

WORD_BLACK_LIST = [
    "nazi",
    "nigga",
    "nigger",
    "asshole",
    "negre",
    "nègre",
    "hitler",
    "rape",
    "viol",
    "enfant",
    "child",
]

BASE_TWITTER = "https://twitter.com/intent/tweet"
BASE_FACEBOOK = "https://www.facebook.com/sharer/sharer.php"
BASE_REDDIT = "https://www.reddit.com/submit"

DISCLAIMER_COOKIE_NAME = "disclaimer-shown"

RECAPTCHA_PUBLIC_KEY = "6LdhrKMiAAAAAKnxxd1sSOJ4qJ1wv4XxwCq999Mn"
RECAPTCHA_PRIVATE_KEY = os.environ.get("RECAPTCHA_SECRET", "")
SILENCED_SYSTEM_CHECKS = ["captcha.recaptcha_test_key_error"]
